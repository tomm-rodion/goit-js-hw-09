{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,eAAgBC,SAASC,cAAc,qBACvCC,eAAgBF,SAASC,cAAc,oBACvCE,YAAaH,SAASC,cAAc,sBACpCG,OAAQJ,SAASC,cAAc,UAKjC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAXPT,EAAKM,OAAOW,iBAAiB,UAe7B,SAA2BC,GACzBA,EAAMC,iBAMN,IAJA,IAAIC,EAAQC,OAAOrB,EAAKC,eAAeqB,OACnCC,EAAOF,OAAOrB,EAAKI,eAAekB,OAClCE,EAASH,OAAOrB,EAAKK,YAAYiB,OAE5BG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BlB,EAAckB,EAAI,EAAGL,EAAQG,EAAOE,GACjCC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA9B,GAAS+B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAInDS,EAAMgB,cAAcC,MAAMnC,EAAKM,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputFirtDelay: document.querySelector('input[name=delay]'),\n  inputStepDelay: document.querySelector('input[name=step]'),\n  inputAmount: document.querySelector('input[name=amount]'),\n  formEl: document.querySelector('.form'),\n};\n\nrefs.formEl.addEventListener('submit', onClickButtonForm);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onClickButtonForm(event) {\n  event.preventDefault();\n\n  let delay = Number(refs.inputFirtDelay.value);\n  let step = Number(refs.inputStepDelay.value);\n  let amount = Number(refs.inputAmount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + step * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  event.currentTarget.reset(refs.formEl);\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","inputFirtDelay","document","querySelector","inputStepDelay","inputAmount","formEl","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.fc4e21db.js.map"}